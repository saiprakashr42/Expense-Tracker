{"version":3,"sources":["Components/Header.js","context/AppReducer.js","context/GlobalState.js","Components/Balance.js","Components/IncomeExpense.js","Components/Transaction.js","Components/TransactionList.js","Components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpense","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","uuid","htmlFor","placeholder","onChange","event","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d296754a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <div>\r\n            <h2>Expense Tracker</h2>\r\n        </div>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n            }\r\n\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions,]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n//initial state\r\nconst initialState = {\r\n    transactions: [\r\n        { id: 1, text: 'Flower', amount: -20 },\r\n        { id: 2, text: 'Salary', amount: 300 },\r\n        { id: 3, text: 'Book', amount: -10 },\r\n        { id: 4, text: 'Camera', amount: 150 }\r\n    ]\r\n}\r\n\r\n//create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n\r\n\r\n\r\n\r\n//provide component\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transaction\r\n\r\n\r\n        });\r\n    }\r\n\r\n    return (<GlobalContext.Provider value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>)\r\n}\r\n\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport default function Balance() {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount)\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h4>Balance</h4>\r\n            <h1 >Rs{total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport default function IncomeExpense() {\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n\r\n    const expense = amounts\r\n        .filter(item => item < 0)\r\n        .reduce((acc, item) => (acc += item), 0) * -1\r\n            .toFixed(2);\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div className=\"Income\">\r\n                <h2>Income</h2>\r\n                <p className=\"money-plus\">{income}</p>\r\n            </div>\r\n\r\n            <div className=\"Expense\">\r\n                <h2>Expense</h2>\r\n                <p className=\"money-minus\">{expense}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport default function Transaction({ transaction }) {\r\n\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>{transaction.text}<span>{sign}Rs{Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n        </li>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport Transaction from './Transaction';\r\n\r\n\r\nexport default function TransactionList() {\r\n    //  const context = useContext(GlobalContext);\r\n    //instead pulling out trasacntions as context.transactions we destructure as follow\r\n\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction.id} transaction={transaction} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n\r\nexport default function AddTransaction() {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            id: uuid(),\r\n            text,\r\n            amount: +amount\r\n        }\r\n\r\n        addTransaction(newTransaction);\r\n        setText('');\r\n        setAmount(0);\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input\r\n                        type='text'\r\n                        placeholder=\"Enter here..\"\r\n                        value={text}\r\n                        onChange={event => setText(event.target.value)}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount<br />\r\n                       (negative-expense, positive-income )\r\n                    </label>\r\n\r\n\r\n                    <input\r\n                        type=\"number\"\r\n                        placeholder=\"Enter Amount..\"\r\n                        value={amount}\r\n                        onChange={event => setAmount(event.target.value)}\r\n                    />\r\n\r\n                </div>\r\n\r\n                <button className=\"btn\">Add transaction</button>\r\n\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import Header from './Components/Header';\nimport Balance from './Components/Balance';\nimport IncomeExpense from './Components/IncomeExpense';\nimport TransactionList from './Components/TransactionList';\nimport AddTransaction from './Components/AddTransaction';\n\n\nimport './App.css';\n\nimport { GlobalProvider } from './context/GlobalState';\n\n\nfunction App() {\n  return (\n    <GlobalProvider >\n      <div className=\"header\">\n        <Header />\n      </div>\n      <div className='container'>\n        <Balance />\n      </div>\n      <IncomeExpense />\n      <TransactionList />\n      <AddTransaction />\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}